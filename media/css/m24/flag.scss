// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

@use 'vars/lib' as *;

.m24-c-flag {
    @include container;
    padding-top: $spacer-xl;
    padding-bottom: $spacer-xl;
}

.m24-c-flag-title {
    font-size: $text-title-2xl;
    line-height: 1;
    margin: 0 0 16px;
    text-wrap: balance;
    text-wrap-style: balance;
}

.m24-c-flag-subtitle {
    font-size: $text-title-md;
    text-wrap: balance;
    text-wrap-style: balance;
    margin-bottom: $spacer-xl;
}

.m24-c-flag-cta {
    margin-bottom: 0;
}

.m24-c-flag-media {
    --delay: 1s; // leave some space to read before introducing movement
    --wave-h: 8px;

    svg {
        transform: translateZ(0);
        width: 100px;
        height: auto;
        fill: $m24-color-green; // zilla green
    }
}

.m24-c-flag-button {
    $font-size: 0.75;
    background-color: $m24-color-dark-mid-gray;
    border-color: transparent; // High Contrast Mode support
    box-shadow: none;
    color: $m24-color-white;
    font-family: $primary-font;
    font-size: calc(#{$font-size} * 1rem);
    font-weight: 600;
    line-height: $font-size;
    padding: 8px;
    cursor: pointer;
    transition: background-color $fast;

    // Focused button is always visible: https://bugzilla.mozilla.org/show_bug.cgi?id=1936862
    &:focus {
        position: relative;
        z-index: 1001; // must be above .m24-navigation-refresh.m24-mzp-is-sticky
    }

    &:hover,
    &:focus {
        background-color: $m24-color-black; // inverts to white in dark theme section
    }

    &:active {
        background-color: $m24-color-dark-mid-gray;
    }

    // High Contrast Mode Support: https://bugzilla.mozilla.org/show_bug.cgi?id=1936865
    @media (forced-colors) {
        background-color: ButtonFace;
        color: ButtonText;

        &:focus {
            outline-color: CanvasText;
        }
    }
}

.m24-c-flag-button-pause,
.m24-c-flag-button-play {
    align-items: center;
    display: flex;
    gap: 8px;
}

.m24-c-flag-button-pause {
    .m24-c-flag-button-text {
        position: relative;
        top: 0.0175rem; // flex alignment isn't totally centered, so we're manually adjusting
    }
}

@media screen and (max-width: #{$screen-lg - 1}) {
    .m24-c-flag-cta {
        margin-bottom: $spacer-xl;
    }

    .m24-c-flag-button {
        display: block;
        margin-bottom: $spacer-md;
        margin-inline-start: auto;
    }

    .m24-c-flag-media {
        width: fit-content;
        margin-inline-start: auto;
    }
}

.m24-c-cta {
    &:hover,
    &:visited:hover {
        color: $m24-color-black;
    }
}

@media #{$mq-lg} {
    .m24-c-flag {
        @include grid;
        grid-template-rows: [button-row-start] auto [button-row-end] auto;
        padding-bottom: $spacer-2xl;
    }

    .m24-c-flag-button {
        grid-column: 1 / -1;
        grid-row: button-row;
        justify-self: end;
    }

    .m24-c-flag-subtitle {
        font-size: 24px;
    }

    .m24-c-flag-media {
        grid-column: 10/12;
        grid-row-start: button-row-end;
        display: flex;
        place-content: center center;
        margin-bottom: 0;

        svg {
            width: 100%;
            max-width: 216px;
        }
    }

    .m24-c-flag-text {
        grid-column: 2/9;
        grid-row-start: button-row-end;
    }

    .m24-c-flag-cta {
        .m24-c-cta.m24-t-sm {
            font-size: $text-title-md;
        }
    }
}

@media #{$mq-max} {
    .m24-c-flag-text {
        grid-column: 1/9;
    }
}

// temporary until transition can be refactored
.m24-c-products {
    background-color: $m24-color-white;
}

// static fallback
.m24-c-flag-media-static {
    display: none;
}

// When no JS or M24_HERO_ANIMATION switch is off
// - hide animation SVG and button
// - show static SVG
.no-js,
[data-m24-hero-animation="false"] {
    .m24-c-flag-button {
        visibility: hidden; // reserve space
    }

    .m24-c-flag-media-animation {
        display: none;
    }

    .m24-c-flag-media-static {
        display: block;
    }
}

/*
Note from Inclusive Components, "Changing labels": https://inclusive-components.design/toggle-button/
As a rule of thumb, you should never change pressed state and label together.
If the label changes, the button has already changed state in a sense,
just not via explicit WAI-ARIA state management.
*/
[data-animation-running="false"] {
    .m24-c-flag-button-pause {
        display: none;
    }

    .flag-one,
    .flag-two,
    .flag-three,
    .flag-four,
    .flag-five {
        animation-play-state: paused;
    }
}

[data-animation-running="true"] {
    .m24-c-flag-button-play {
        display: none;
    }

    .flag-one,
    .flag-two,
    .flag-three,
    .flag-four,
    .flag-five {
        animation-play-state: running;
    }
}

/* Common Element Styles */
.flag,
.flag-one,
.flag-two,
.flag-three,
.flag-four,
.flag-five,
.pole,
.head,
.pole-one,
.pole-two,
.eye,
.mouth {
  shape-rendering: crispEdges;
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: none;
}

/* Wave Animations Base */
.flag-one,
.flag-two,
.flag-three,
.flag-four,
.flag-five {
  animation: 1s var(--delay) $bezier infinite;
  will-change: transform;
  filter: url("#dilate");
}

/* Flag Animation Names */
.flag-one { animation-name: flag-one; }
.flag-two { animation-name: flag-two; }
.flag-three { animation-name: flag-three; }
.flag-four { animation-name: flag-four; }
.flag-five { animation-name: flag-five; }


/* Flag Movement Keyframes */
@keyframes flag-one {
  0%, 15% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: ease-in;
}
  16%, 40% { transform: translate3d(0, var(--wave-h), 0); }
  41%, 65% { transform: translate3d(0, 0, 0); }
  66%, 91% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
  92%, 100% { transform: translate3d(0, 0, 0); }
}

@keyframes flag-two {
  0%, 24% { transform: translate3d(0, 0, 0); }
  25%, 49% { transform: translate3d(0, var(--wave-h), 0); }
  50%, 74% { transform: translate3d(0, 0, 0); }
  75%, 99% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
  100% { transform: translate3d(0, 0, 0); }
}

@keyframes flag-three {
  0%, 7% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
  8%, 32% { transform: translate3d(0, 0, 0); }
  33%, 57% { transform: translate3d(0, var(--wave-h), 0); }
  58%, 82% { transform: translate3d(0, 0, 0); }
  83%, 100% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
}

@keyframes flag-four {
  0%, 15% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
  16%, 49% { transform: translate3d(0, 0, 0); }
  50%, 65% { transform: translate3d(0, var(--wave-h), 0); }
  66%, 100% { transform: translate3d(0, 0, 0); }
}

@keyframes flag-five {
  0%, 24% { transform: translate3d(0, calc(-1 * var(--wave-h)), 0); }
  25%, 49% { transform: translate3d(0, 0, 0); }
  50%, 74% { transform: translate3d(0, var(--wave-h), 0); }

  75%, 100% {
    transform: translate3d(0, 0, 0);
    animation-timing-function: ease-out;
  }
}
