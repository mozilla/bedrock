// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

$font-path: '/media/fonts';
$image-path: '/media/protocol/img';

@import '../../protocol/css/includes/lib';
@import '../../protocol/css/components/emphasis-box';
@import '../../protocol/css/components/feature-card';
@import '../../protocol/css/components/menu-list';
@import '../../protocol/css/components/zap';


$send-svg: '<svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g transform="translate(3.000000, 1.000000)" stroke="#{$color-link-hover}" stroke-width="2"><path d="M2,16 L2,20 C2,21.1045695 2.8954305,22 4,22 L14,22 C15.1045695,22 16,21.1045695 16,20 L16,2 C16,0.8954305 15.1045695,-2.02906125e-16 14,0 L4,0 C2.8954305,2.02906125e-16 2,0.8954305 2,2 L2,6" stroke-linecap="round"></path><path d="M2,4 L16,4"></path><path d="M2,18 L16,18"></path><path d="M3.55271368e-15,11 L10,11" stroke-linecap="round" stroke-linejoin="round"></path><polyline stroke-linecap="round" stroke-linejoin="round" points="6 7 10 11 6 15"></polyline></g></g></svg>';
$send-url: svg-url($send-svg);

//* -------------------------------------------------------------------------- */
// put spacing into variables so it's easier to adjust spacing at each break point

// xs
$v-grid-xs: $layout-xs;
$h-grid-xs: $layout-xs;

//md
$v-grid-md: $layout-md;
$h-grid-md: $layout-lg;

//lg
$v-grid-lg: $layout-lg;
$h-grid-lg: $layout-xl;

//* -------------------------------------------------------------------------- */
// utility class

.hidden {
    display: none !important; /* stylelint-disable-line declaration-no-important */
}

//* -------------------------------------------------------------------------- */
// Protocol over-rides

.mzp-c-menu-list {
    // match the bottom margin of <p>
    margin-bottom: 1.25em;
}

.mzp-c-menu-list-title {
    margin-bottom: 0;
}

.mzp-t-download .mzp-c-menu-list-item.t-web a:hover:after {
    display: none;
}

.mzp-t-download .mzp-c-menu-list-item.t-getapp a:hover:after {
    background-image: $send-url;
}

// vertical spacing
main .mzp-l-content {
    padding-bottom: $v-grid-xs;
    padding-top: $v-grid-xs;

    @media #{$mq-md} {
        padding-bottom: $v-grid-md;
        padding-top: $v-grid-md;
    }

    @media #{$mq-lg} {
        padding-bottom: $v-grid-lg;
        padding-top: $v-grid-lg;
    }
}

// make buttons in drop down menus look like links
.c-menu-list-link {
    &,
    &.mzp-c-button.mzp-t-product {
        background-color: inherit;
        color: $color-link;
        display: block;
        font-family: inherit;
        font-weight: normal;
        padding: $spacing-sm 30px $spacing-sm $spacing-sm;
        border: 0;

        &:hover {
            color: $color-link-hover;
            background-color: $color-gray-20;
        }
    }

}

//* -------------------------------------------------------------------------- */
// use block component for top banner
// https://github.com/mozilla/protocol/issues/326

.c-block {
    overflow-x: hidden;
    padding: $v-grid-xs 0;
    position: relative;
    text-align: center;

    h1 {
        @include text-display-xl;
    }

    p {
        @include text-body-lg;
        margin-bottom: 0;
    }

    @media #{$mq-md} {
        padding: $v-grid-md 0;
    }

    @media #{$mq-lg} {
        padding: $v-grid-lg 0;

        &.t-products {
            padding: 0;
        }
    }
}

.c-block-container {
    @include border-box;
    @include clearfix();
    align-self: center; // l-v-center in block component
    margin: 0 auto;
    max-width: $content-max;
    min-width: $content-xs;
    padding: 0 $h-grid-xs;

    @media #{$mq-lg} {
        padding: 0 ($h-grid-lg / 2);
    }
}

.c-block-body {
    position: relative;

    @media #{$mq-lg} {
        @include border-box;
        @include bidi((
            (float, left, right),
            (text-align, left, right)
        ));
        padding: 0 ($h-grid-lg / 2);
        width: 50%;
    }
}


.c-block-media {
    position: relative;

    @media all and (max-width:#{$screen-lg - 1}) {
        .has-media-hide & {
            display: none;
        }
    }

    @media #{$mq-lg} {
        @include border-box;
        @include bidi(((float, right, left),));
        padding: 0 ($h-grid-lg / 2);
        width: 50%;
    }
}

@supports(display:grid) {

    .c-block-container  {
        @media #{$mq-lg} {
            // grid is all start/end based we don't need bidi declarations for RTL support \o/
            display: grid;
            grid-column-gap: $h-grid-lg;
            grid-template-areas: "body media";
            grid-template-columns: 480px auto;
            padding: $v-grid-lg $h-grid-lg;
        }
    }

    .c-block-body,
    .c-block-media {
        float: none;
        min-width: 0; //because of https://stackoverflow.com/questions/43311943/prevent-content-from-expanding-grid-items
        padding: 0;
        width: auto;
    }

    .c-block-body {
        grid-area: body;
    }

    .c-block-media {
        align-self: stretch;
        grid-area: media;

        @media #{$mq-lg} {
            margin: ($v-grid-lg * -1) 0; // l-fit-flush in block component

            .c-block-media-img {
                display: block;
                max-width: none;
            }

            &.l-constrain-height {

                .c-block-media-img {
                    bottom: 0;
                    left: 0;
                    max-height: 100%;
                    max-width: none;
                    position: absolute;
                    top: 0;
                    width: auto;

                    [dir='rtl'] & {
                        left: auto;
                        right: 0;
                    }
                }
            }
        }
    }
}


//* -------------------------------------------------------------------------- */
// landing grid

.c-landing-grid-item {
    margin-bottom: $v-grid-xs * 2; // vertical spacing
    margin-left: auto;
    margin-right: auto;
    max-width: 400px;

    &:last-child {
        margin-bottom: 0;
    }

    &.c-landing-grid-wide {
        max-width: 100%;
    }

    > p:last-child {
        margin-bottom: 0;
    }
}

.c-landing-grid-title {
    @include font-size(24px);
    margin-bottom: $spacing-md;
    margin-top: $spacing-xl;

    a {
        color: $color-off-black;
        text-decoration: none;

        &:hover,
        &:focus {
            text-decoration: underline;
        }
    }

    + p {
        margin-bottom: $spacing-xl;
    }
}

.c-landing-grid-img {
    display: block;
    margin: 0 auto;
}

@media #{$mq-sm} {
    .c-landing-grid-img {
        max-width: $content-xs;
    }
}

// two column grid for browsers that don't support display:grid
// works in RTL without bidi styles \o/
@media #{$mq-md} {
    .c-landing-grid-item {
        float: left;
        margin-bottom: $v-grid-md * 2;
        margin-left: $h-grid-md;
        max-width: 100%;
        width: calc(50% - #{$h-grid-md / 2}) ;

        &:nth-child(odd) {
            clear: left;
            margin-left: 0;
        }

        &.c-landing-grid-wide {
            width: 100%;
        }
    }
}

@media #{$mq-lg} {
    .c-landing-grid-item {
        margin-bottom: $v-grid-lg * 2;
        margin-left: $h-grid-lg;
        width: calc(50% - #{$h-grid-lg / 2}) ;
    }
}

// column grid for browsers that do support grid
@supports (display:grid) {

    // two column
    @media #{$mq-md} {
        .c-landing-grid {
            @include grid-column-gap($h-grid-md);
            @include grid-row-gap(#{$v-grid-md * 2});
            display: grid;
            grid-template-columns: repeat(2, minmax(0, 1fr) );
        }

        // need to remove :after added by .mzp-l-content or we get an extra grid row
        // added for clearfix purposes but grids don't need a clearfix
        .c-landing-grid:after {
            content: none;
        }

        .c-landing-grid-item {
            margin-bottom: 0; // vertical spacing now set as row-gap instead of margin-bottom
            margin-left: 0;
            width: auto; // over-ride 50% width from float layout
        }

        .c-landing-grid-img {
            max-width: 100%;
        }

        .c-landing-grid-wide {
            grid-column: span 2;
        }
    }

     // three column
    @media #{$mq-lg} {
        .c-landing-grid {
            @include grid-column-gap($h-grid-lg);
            @include grid-row-gap(#{$v-grid-lg * 2});
            grid-template-columns: repeat(3, minmax(0, 1fr) );
        }
    }
}

//* -------------------------------------------------------------------------- */
// Download icon for "download for desktop" link

@function download-arrow($color) {
    $svg: '<svg width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linecap="round"><g transform="translate(6.000000, 3.000000)" stroke="#{$color}" stroke-width="2"><path d="M0,18 L12,18"></path><polyline stroke-linejoin="round" points="0 8 6 14 12 8"></polyline><path d="M6,0 L6,14"></path></g></g></svg>';
    @return $svg;
}

$download-link: download-arrow($color-link);
$download-link-hover: download-arrow($color-link-hover);
$url-download-link: svg-url($download-link);
$url-download-link-hover: svg-url($download-link-hover);

.cta-download {
    padding-right: 24px;
    position: relative;

    &:after {
        @include background-size(23px);
        @include bidi(((right, 0, left, auto),));
        background-image: $url-download-link;
        background-position: center bottom;
        background-repeat: no-repeat;
        bottom: 0;
        content: '';
        display: inline-block;
        height: 23px;
        position: absolute;
        width: 16px;
    }

    &:hover:after {
        background-image: $url-download-link-hover;
    }
}


//* -------------------------------------------------------------------------- */
// Mobile download links, show app store links when user is on mobile

.appstore-android,
.appstore-ios {
    display: none;
    margin-bottom: 1.25em;

    img {
        display: block;
    }
}

.android .appstore-android {
    display: block;
}

.ios .appstore-ios {
    display: block;
}

.ios,
.android {
    #menu-mobile-wrapper,
    #card-desktop-download,
    #desktop-download {
        display: none;
    }
}

#menu-browsers {
    .ios & .menu-desktop,
    .ios & .menu-android,
    .android & .menu-desktop,
    .android & .menu-ios {
        a {
            pointer-events: none;
            color: $color-gray-50;
        }
    }
}

//* -------------------------------------------------------------------------- */
// dev tools block

.t-dev {
    background-color: $color-gray-20;
    margin-top: $layout-xs + $layout-2xl;
    padding: $layout-xs;

    .mzp-c-card-feature-title {
        @include visually-hidden;
    }

    .mzp-c-card-feature {
        margin-bottom: 0;
    }

    .mzp-c-card-feature-media {
        margin-top: $layout-2xl * -1;
    }

    .mzp-c-card-feature-desc {
        p:last-child {
            margin-bottom: 0;
        }
    }
}

.c-dev-title {
    @include text-display-sm;
    @include font-firefox;
    font-weight: bold;
}

@media #{$mq-sm} {
    .t-dev {
        margin-left: auto;
        margin-right: auto;
        max-width: $content-xs;
    }
}

@media #{$mq-md} {
    .t-dev {
        border-radius: 4px;
        margin-top: 0;
        max-width: 100%;
        padding: $layout-md;

        .mzp-c-card-feature-media {
            margin-top: 0;
        }
    }
}

@media (min-width:#{$screen-lg}) and (max-width:#{$screen-xl - 1px}) {
    .t-dev {
        .mzp-c-card-feature.mzp-l-card-feature-left-half {
            display: block;
        }

        .mzp-c-card-feature-media {
            display: none;
        }
    }
}


//* -------------------------------------------------------------------------- */
// FxA account signup form

// box around form
.t-account {
    @include light-links;
    background: linear-gradient($color-violet-50 -100%, $color-off-black);
    color: $color-white;
    margin: 0 auto $v-grid-xs auto;
    position: relative;

    @media #{$mq-sm} {
        margin-bottom: $v-grid-md;
        max-width: 560px;
    }

    @media #{$mq-lg} {
        margin-bottom: $v-grid-lg;
        max-width: 100%;

        &:after {
            content: '';
            background: url('/media/img/firefox/browsers/fxa.svg') center center no-repeat;
            background-size: contain;
            display: block;
            position: absolute;
            top: $layout-md;
            right: $layout-md;
            bottom: $layout-md;
            left: calc(560px + #{$layout-md * 2});
        }
    }

    @media #{$mq-xl} {
        &:after {
            background-size: auto;
        }
    }
}

// form
.fxa-form-cta {
    @include text-body-xs;
    max-width: 560px;
    margin: 0 auto;

    @media #{$mq-md} {
        margin: 0;
    }
}

.fxa-email-form-title {
    @include font-size(24px);
    margin-bottom: $spacing-xl;
}

.fxa-email-form-intro {
    display: none;
}

.fxa-email-field-container {
    .field {
        label {
            @include text-body-sm;
        }

        input[type="email"] {
            box-shadow: none;
            padding: 12px 16px;
            width: 100%;
        }
    }

    .mzp-c-button {
        width: 100%;
    }

    @media #{$mq-md} {
        @supports(display:grid) {
            & {
                @include grid-column-gap($spacing-lg);
                display: grid;
                grid-template-columns: 1fr min-content;
                grid-template-rows: auto auto auto;
            }

            .field {
                grid-column-start: 1;
                grid-row-start: 1;
                grid-row-end: 3;
                margin-bottom: 0;

                label {
                    margin-bottom: $spacing-sm;
                }
            }

            .agreement {
                grid-column-start: 1;
                grid-row-start: 3;
                grid-row-end: 4;
                margin-top: $spacing-sm;
                margin-bottom: 0;
            }

            .mzp-c-button {
                grid-column-start: 2;
                grid-row-start: 2;
                grid-row-end: 3;
            }
        }
    }
}

.account-signin {
    margin-bottom: 0;
    margin-top: $spacing-xl;
}
