.. This Source Code Form is subject to the terms of the Mozilla Public
.. License, v. 2.0. If a copy of the MPL was not distributed with this
.. file, You can obtain one at http://mozilla.org/MPL/2.0/.

.. _https-testing:

========================
Testing With HTTPS (SSL)
========================

The ``manage.py`` script that comes with bedrock only supports HTTP. To test
the bedrock site using HTTPS you must either run the site through a real web
server or proxy the HTTPS connection through an SSL wrapper.

.. _stunnel:

HTTPS Proxying Using stunnel
============================

`stunnel <https://www.stunnel.org/index.html>` is a program that wraps a
regular service with SSL. To wrap the ``manage.py`` test server using stunnel
a few steps are required.

.. note:: These instructions assume you are using a Unix-like environment. The
          steps will be slightly different for Windows.

stunnel is available in package repositories of most major Linux
distributions. An `stunnel Windows installer <https://www.stunnel.org/downloads.html>`
is provided on the stunnel website. On OS X, stunnel can be installed using
`Homebrew <http://brew.sh/>`.

.. _openssl:

Generate a PEM File using OpenSSL
---------------------------------

The PEM file will contain a certificate, private key and DH parameters. This
file should only be used for testing. It is normally not safe to store the
private key and the certificate in the same file.

First, generate the certificate and key. The certificate will be valid for 365
days. The OpenSSL command will prompt you for information about yourself that
will be saved in the certificate::

    openssl req -new -x509 -days 365 -nodes -out bedrock-stunnel.pem -keyout bedrock-stunnel.pem

Next, generate DH parameters and append them to the PEM file. Stunnel requires
the DH parameters to be pre-generated in the PEM file::

    openssl gendh 2048 >> bedrock-stunnel.pem

.. note:: Generating DH parameters takes several minutes.

The PEM file should be sufficient for use with stunnel. You can view
information about the certificate you generated using the following
command::

    openssl x509 -subject -dates -fingerprint -in bedrock-stunnel.pem

.. _stunnel-config:

Create an stunnel Configuration
-------------------------------

stunnel uses an INI file for its configuration. Create the following file for
bedrock HTTPS testing. Change *myhost*, *myport* and *myhttpsport* to values
that are valid for your environment::

    ; don't create a pid file when running
    pid=
    
    ; run in foreground rather than forking daemon
    foreground=yes
    
    ; save output to a file
    output=/path/to/bedrock/bedrock-stunnel.log
    
    [https]
    ; pem file generated by openssl
    cert=/path/to/bedrock/bedrock-stunnel.pem
    
    ; port to use for https
    accept=myhttpsport
    
    ; host:port running bedrock on normal http
    connect=myhost:myport

Run Bedrock
-----------

Next run the bedrock test server. An environment variable needs to be set to
tell bedrock the site is secure::

    HTTPS=on; python manage.py runserver myhost:myport

Run stunnel
-----------

Finally, run stunnel using the configuration you created::

    stunnel bedrock-stunnel.ini

After stunnel starts, you can test bedrock over HTTPS at *myhttpsport*.
