# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Generated by Django 4.2.20 on 2025-03-19 18:54

import uuid

import django.db.models.deletion
from django.db import migrations, models

import wagtail.fields


class Migration(migrations.Migration):
    dependencies = [
        ("cms", "0003_bedrockimage_description"),
        ("products", "0004_alter_vpncalltoactionsnippet_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="MonitorCallToActionSnippet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("translation_key", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("split_heading", models.CharField(max_length=60)),
                ("split_subheading", models.CharField(blank=True, max_length=60)),
                ("split_content", wagtail.fields.RichTextField(blank=True, null=True)),
                ("split_button_text", models.CharField(max_length=40, verbose_name="Link Text")),
                ("split_button_link", models.URLField(verbose_name="Link URL")),
                (
                    "locale",
                    models.ForeignKey(
                        editable=False, on_delete=django.db.models.deletion.PROTECT, related_name="+", to="wagtailcore.locale", verbose_name="locale"
                    ),
                ),
                ("split_image", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to="cms.bedrockimage")),
            ],
            options={
                "verbose_name": "Monitor Call To Action Snippet",
                "verbose_name_plural": "Monitor Call To Action Snippets",
                "abstract": False,
                "unique_together": {("translation_key", "locale")},
            },
        ),
        migrations.CreateModel(
            name="MonitorArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("subheading", models.CharField(blank=True, max_length=255)),
                ("summary", wagtail.fields.RichTextField(blank=True, null=True)),
                ("content", wagtail.fields.RichTextField(null=True)),
                (
                    "call_to_action_bottom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="products.monitorcalltoactionsnippet",
                    ),
                ),
                (
                    "call_to_action_middle",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="products.monitorcalltoactionsnippet",
                    ),
                ),
                ("icon", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to="cms.bedrockimage")),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MonitorArticleIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("split_heading", models.CharField(max_length=60)),
                ("split_subheading", models.CharField(blank=True, max_length=60)),
                ("split_content", wagtail.fields.RichTextField(blank=True, null=True)),
                ("split_button_text", models.CharField(max_length=40, verbose_name="Link Text")),
                ("split_button_link", models.URLField(verbose_name="Link URL")),
                ("articles_heading", models.CharField(max_length=100)),
                ("articles_subheading", models.CharField(blank=True, max_length=255)),
                (
                    "call_to_action_bottom",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="products.monitorcalltoactionsnippet",
                    ),
                ),
                ("split_image", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to="cms.bedrockimage")),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
    ]
