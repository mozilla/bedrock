# Workflows that run integration tests on live sites

name: Integration tests
on:
  - pull_request  ## TEMPORARY
  - workflow_dispatch  ## MAKE WORK OFF WEBHOOK ONLY

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        include:
          - LABEL: test-ie-saucelabs
            BROWSER_NAME: internet explorer
            DRIVER: SauceLabs
            MARK_EXPRESSION: "smoke or sanity"
            PLATFORM: Windows 10
            PYTEST_PROCESSES: "8"
          - LABEL: test-firefox-remote
            BROWSER_NAME: firefox
            MARK_EXPRESSION: "not headless and not download and not skip_if_firefox and not cdn"
            DRIVER: Remote
            PYTEST_PROCESSES: "auto"
          - LABEL: test-headless
            DRIVER: ""
            MARK_EXPRESSION: headless
          - LABEL: test-chrome-remote
            BROWSER_NAME: chrome
            DRIVER: Remote
            MARK_EXPRESSION: "not headless and not download and not skip_if_not_firefox and not cdn"
            PYTEST_PROCESSES: "auto"
          # TEMPORARILY DISABLE DOWNLOAD TESTS - may need selectively running
          # - LABEL: test-download-remote
          #   BROWSER_NAME: "firefox"
          #   DRIVER: Remote
          #   MARK_EXPRESSION: download
          #   PYTEST_PROCESSES: "auto"

    env:
      BASE_URL: https://dev.bedrock.nonprod.webservices.mozgcp.net  # TODO MAKE DYNAMIC
      BASE_POCKET_URL: https://dev.pocket.bedrock.nonprod.webservices.mozgcp.net  # TODO MAKE DYNAMIC
      BROWSER_NAME: ${{matrix.BROWSER_NAME}}
      BOUNCER_URL: https://bouncer-bouncer.stage.mozaws.net/  # TODO: MAKE DYNAMIC BASED ON TARGET
      CI_JOB_ID: ${{github.run_id}}
      DRIVER: ${{matrix.DRIVER}}
      LABEL: ${{matrix.LABEL}}
      MARK_EXPRESSION: ${{matrix.MARK_EXPRESSION}}
      PLATFORM: ${{matrix.PLATFORM}}
      PYTEST_PROCESSES: ${{matrix.PYTEST_PROCESSES}}
      SAUCELABS_API_KEY: ${{secrets.SAUCELABS_API_KEY}}
      SAUCELABS_USERNAME: ${{secrets.SAUCELABS_USERNAME}}

    steps:
      - name: Fetch codebase
        uses: actions/checkout@v3
      - name: "Build fresh bedrock_test image. TODO: make this a precursor dependency step"
        run: |
          cp docker/envfiles/test.env .env
          docker-compose build --pull app
          docker tag mozmeao/bedrock_test:latest bedrock_integration_tests:latest

      - name: Run functional integration tests
        run: ./bin/integration_tests/functional_tests.sh
        env:
          TEST_IMAGE: bedrock_integration_tests:latest  # TODO MAKE DYNAMIC BASED ON WEBHOOK IF POSS

      - name: Cleanup after functional integration tests
        run: ./bin/integration_tests/cleanup_after_functional_tests.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: results-${{github.run_id}}-${{matrix.label}}
